{"version":3,"sources":["components/News/News.tsx","components/Gallery/Gallery.tsx","utils/stringUtils.ts","redux/gallery/galleryActionTypes.ts","redux/gallery/gallerySelectors.ts","components/GalleriesContainer/GalleriesContainer.tsx","redux/gallery/galleryActions.ts","components/About/About.tsx","components/TagsContainer/Tag/Tag.tsx","components/TagsContainer/TagsContainer.tsx","components/GalleryPage/GalleryPage.tsx","constants/urls.ts","logo.svg","components/UserPanel/UserPanel.tsx","components/NavBar/NavBar.tsx","components/App/App.tsx","redux/gallery/galleryReducer.ts","redux/rootReducer.ts","redux/gallery/gallerySaga.ts","redux/rootSaga.ts","redux/store.ts","index.tsx"],"names":["News","Gallery","text","limit","id","title","date","description","coverUrl","backgroundColor","className","classnames","to","style","backgroundImage","process","length","substring","moment","format","FETCH_GALLERIES_START","FETCH_GALLERIES_SUCCESS","galleriesSelector","createSelector","state","galleryReducer","galleries","GalleriesContainer","dispatch","useDispatch","useEffect","type","useSelector","classNames","map","gallery","index","galleryId","dateCreated","About","Tag","content","isEdited","toUpperCase","onClick","console","log","TagsContainer","tags","useState","setIsEdited","tag","GalleryPage","useParams","find","NEWS_URL","UserPanel","NavBar","userPanelHidden","setUserPanelHidden","src","logo","alt","height","App","exact","path","initialState","action","payload","rootReducer","combineReducers","fetchGalleriesAsync","fetchGalleriesStart","gallerySaga","fetchData","a","fetch","response","json","call","data","put","takeLatest","all","rootSaga","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.7e15e205.chunk.js","sourcesContent":["import React from \"react\";\n\nconst News: React.FC = () => <h1>news</h1>;\n\nexport default News;\n","import React from \"react\";\nimport \"./Gallery.scss\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport classnames from \"classnames\";\nimport { addDots } from \"../../utils/stringUtils\";\n\ninterface IProps {\n  id: string;\n  title: string;\n  date: Date;\n  description: string;\n  coverUrl: string;\n  backgroundColor: boolean;\n}\n\nconst Gallery: React.FC<IProps> = ({\n  id,\n  title,\n  date,\n  description,\n  coverUrl,\n  backgroundColor,\n}) => {\n  return (\n    <div\n      className={classnames(\n        \"gallery-box\",\n        `${backgroundColor && \"background-color\"}`\n      )}\n    >\n      <Link to={`/gallery/${id}`}>\n        <div\n          className=\"picture-box\"\n          style={{\n            backgroundImage: `url(${process.env.PUBLIC_URL + coverUrl})`,\n          }}\n        />\n        <div\n          className={classnames(\n            \"gallery-box__info\",\n            \"p-2\",\n            \"flex-col-container\",\n            \"flex-justify-end\"\n          )}\n        >\n          <h3 className={\"m-b-1\"}>{title}</h3>\n          <span>{addDots(description, 200)}</span>\n          <div className=\"date\">\n            <i>\n              <p>{moment(date).format(\"DD.MM.YYYY\")}</p>\n            </i>\n          </div>\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nexport default Gallery;\n","export const addDots = (text: string, limit: number): string => {\n  const dots = \"...\";\n  if (text.length > limit) {\n    return (text = `${text.substring(0, limit)}${dots}`);\n  }\n  return text;\n};\n","import IGallery from \"../../models/gallery\";\n\nexport const FETCH_GALLERIES_START = \"FETCH_GALLERIES_START\";\nexport const FETCH_GALLERIES_SUCCESS = \"FETCH_GALLERIES_SUCCESS\";\n\ninterface FetchGalleriesAction {\n  type: typeof FETCH_GALLERIES_START;\n}\n\ninterface FetchGalleriesSuccessAction {\n  type: typeof FETCH_GALLERIES_SUCCESS;\n  payload: IGallery[];\n}\n\nexport type GalleriesActionTypes =\n  | FetchGalleriesAction\n  | FetchGalleriesSuccessAction;\n","import { createSelector } from \"reselect\";\nimport { RootState } from \"../rootReducer\";\n\nconst galleryReducerSelector = (state: RootState) => state.galleryReducer;\n\nexport const galleriesSelector = createSelector(\n  [galleryReducerSelector],\n  (galleryReducer) => galleryReducer.galleries\n);\n\nexport const gallerySelector = (id: string) =>\n  createSelector(galleriesSelector, (galleries) =>\n    galleries.find((gallery) => gallery.galleryId === id)\n  );\n","import React, { useEffect } from \"react\";\nimport Gallery from \"../Gallery/Gallery\";\nimport IGallery from \"../../models/gallery\";\nimport \"./GalleriesContainer.scss\";\nimport classNames from \"classnames\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchGalleriesAction } from \"../../redux/gallery/galleryActions\";\nimport { galleriesSelector } from \"../../redux/gallery/gallerySelectors\";\nimport { AppDispatch } from \"../../redux/store\";\n\nconst GalleriesContainer: React.FC = () => {\n  const dispatch: AppDispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchGalleriesAction());\n  }, [dispatch]);\n\n  const galleries: IGallery[] = useSelector(galleriesSelector);\n\n  return (\n    <div>\n      <h1 className={\"m-t-2\"}>My galleries</h1>\n      <div\n        className={classNames(\n          \"galleries-container\",\n          \"flex-row-container\",\n          \"flex-wrap\",\n          \"m-t-2\"\n        )}\n      >\n        {galleries &&\n          galleries.map((gallery: IGallery, index: number) => {\n            return (\n              <Gallery\n                key={gallery.galleryId}\n                id={gallery.galleryId}\n                title={gallery.title}\n                date={gallery.dateCreated}\n                description={gallery.description}\n                coverUrl={gallery.coverUrl}\n                backgroundColor={index % 2 === 0}\n              />\n            );\n          })}\n      </div>\n    </div>\n  );\n};\n\nexport default GalleriesContainer;\n","import {\n  FETCH_GALLERIES_START,\n  FETCH_GALLERIES_SUCCESS,\n  GalleriesActionTypes,\n} from \"./galleryActionTypes\";\nimport IGallery from \"../../models/gallery\";\n\nexport const fetchGalleriesAction = (): GalleriesActionTypes => {\n  return { type: FETCH_GALLERIES_START };\n};\n\nexport const fetchGalleriesSuccessAction = (\n  payload: IGallery[]\n): GalleriesActionTypes => {\n  return {\n    type: FETCH_GALLERIES_SUCCESS,\n    payload,\n  };\n};\n","import React from \"react\";\nimport \"./About.scss\";\n\nconst About: React.FC = () => <div>about/contact</div>;\n\nexport default About;\n","import React from \"react\";\nimport \"./Tag.scss\";\n\ninterface IProps {\n  content: string;\n  isEdited: boolean;\n}\n\nconst Tag: React.FC<IProps> = ({ content, isEdited }) => {\n  return (\n    <div\n      className={\n        \"flex-row-container flex-align-items-center tag p-1 m-r-1 m-b-1 m-t-1\"\n      }\n    >\n      <span>{content.toUpperCase()}</span>\n      {isEdited && (\n        <span\n          className=\"material-icons md-20 pointer\"\n          onClick={() => console.log(\"fired\")}\n        >\n          delete_forever\n        </span>\n      )}\n    </div>\n  );\n};\n\nexport default Tag;\n","import React, { useState } from \"react\";\nimport Tag from \"./Tag/Tag\";\nimport \"./TagsContainer.scss\";\n\ninterface IProps {\n  tags?: string[];\n}\n\nconst TagsContainer: React.FC<IProps> = ({ tags }) => {\n  const [isEdited, setIsEdited] = useState(false);\n  return (\n    <div className={\"tags-container flex-row-container m-t-2 flex-wrap\"}>\n      {tags &&\n        tags.map((tag: string, index) => (\n          <Tag content={tag} key={index} isEdited={isEdited} />\n        ))}\n      <button\n        className={\"button button-edit\"}\n        onClick={() => setIsEdited(!isEdited)}\n      >\n        <div className=\"flex-row-container flex-align-items-center\">\n          <i className=\"material-icons md-20\">{isEdited ? \"done\" : \"create\"}</i>\n        </div>\n      </button>\n    </div>\n  );\n};\n\nexport default TagsContainer;\n","import React from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport moment from \"moment\";\nimport TagsContainer from \"../TagsContainer/TagsContainer\";\nimport { useSelector } from \"react-redux\";\nimport { gallerySelector } from \"../../redux/gallery/gallerySelectors\";\n\ninterface IParams {\n  galleryId: string;\n}\n\nconst GalleryPage: React.FC = () => {\n  const { galleryId }: IParams = useParams();\n  const gallery = useSelector(gallerySelector(galleryId));\n\n  return (\n    <>\n      {gallery && (\n        <>\n          <div\n            className={\"flex-row-container flex-align-items-center m-t-2 m-b-1\"}\n          >\n            <Link to={\"/\"}>\n              <button className={\"button button-primary\"}>\n                <div className=\"flex-row-container flex-align-items-center\">\n                  <i className=\"material-icons md-16\">arrow_back_ios</i>back to\n                  galleries\n                </div>\n              </button>\n            </Link>\n            <h2 className={\"m-l-3\"}>{`${gallery.title}, ${moment(\n              gallery.dateCreated\n            ).format(\"DD MMMM YYYY\")}`}</h2>\n          </div>\n          <hr />\n          <TagsContainer tags={gallery.tags} />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default GalleryPage;\n","export const HOME_URL = \"/react-gallery\";\nexport const GALLERY_URL = \"/gallery/:galleryId\";\nexport const CONTACT_URL = \"/contact\";\nexport const NEWS_URL = \"/news\";\n","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from \"react\";\r\nimport \"./UserPanel.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst UserPanel = () => (\r\n  <div className=\"user-panel p-1 flex-col-container\">\r\n    <p className={\"m-b-1\"}>Signed in as</p>\r\n    <p className={\"username m-b-1\"}>yourUsername</p>\r\n    <hr />\r\n    <Link to={\"profile\"}>Your profile</Link>\r\n    <hr />\r\n    <Link to={\"settings\"}>Settings</Link>\r\n    <Link to={\"/\"}>Sign out</Link>\r\n  </div>\r\n);\r\n\r\nexport default UserPanel;\r\n","import React, { useState } from \"react\";\nimport classNames from \"classnames\";\nimport logo from \"../../logo.svg\";\nimport { Link } from \"react-router-dom\";\nimport { NEWS_URL } from \"../../constants/urls\";\nimport \"./NavBar.scss\";\nimport UserPanel from \"../UserPanel/UserPanel\";\n\nconst NavBar = () => {\n  const avatarUrl = \"/img/user/user.jpeg\";\n  const [userPanelHidden, setUserPanelHidden] = useState(true);\n  return (\n    <header>\n      <div className={\"header p-l-6 p-r-6\"}>\n        <Link to={\"/\"}>\n          <div\n            className={classNames(\n              \"logo-part\",\n              \"flex-row-container\",\n              \"flex-align-items-center\"\n            )}\n          >\n            <img className={\"logo\"} src={logo} alt=\"app logo\" height={70} />\n            <h2>React Gallery</h2>\n          </div>\n        </Link>\n        <div className=\"links-part flex-row-container\">\n          <div className=\"buttons flex-row-container flex-justify-end\">\n            <Link to={\"/\"}>Galleries</Link>\n            <Link to={`${NEWS_URL}`}>News</Link>\n          </div>\n          <div\n            className=\"user-panel-header m-r-1 m-l-1\"\n            onClick={() => setUserPanelHidden(!userPanelHidden)}\n            style={{\n              backgroundImage: `url(${process.env.PUBLIC_URL + avatarUrl})`,\n            }}\n          />\n        </div>\n      </div>\n      {!userPanelHidden && <UserPanel />}\n    </header>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\r\nimport \"./App.scss\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport News from \"../News/News\";\r\nimport GalleriesContainer from \"../GalleriesContainer/GalleriesContainer\";\r\nimport About from \"../About/About\";\r\nimport GalleryPage from \"../GalleryPage/GalleryPage\";\r\nimport { CONTACT_URL, GALLERY_URL, NEWS_URL } from \"../../constants/urls\";\r\nimport NavBar from \"../NavBar/NavBar\";\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <div className={\"app-container\"}>\r\n        <div className=\"app-content\">\r\n          <Switch>\r\n            <Route exact path={\"/\"}>\r\n              <GalleriesContainer />\r\n            </Route>\r\n            <Route path={`${NEWS_URL}`}>\r\n              <News />\r\n            </Route>\r\n            <Route path={`${CONTACT_URL}`}>\r\n              <About />\r\n            </Route>\r\n            <Route path={`${GALLERY_URL}`}>\r\n              <GalleryPage />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { GalleryState } from \"./galleryTypes\";\nimport {\n  FETCH_GALLERIES_SUCCESS,\n  GalleriesActionTypes,\n} from \"./galleryActionTypes\";\n\nconst initialState: GalleryState = {\n  galleries: [],\n};\n\nconst galleryReducer = (\n  state = initialState,\n  action: GalleriesActionTypes\n): GalleryState => {\n  switch (action.type) {\n    case FETCH_GALLERIES_SUCCESS:\n      return {\n        ...state,\n        galleries: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default galleryReducer;\n","import { combineReducers } from \"redux\";\nimport galleryReducer from \"./gallery/galleryReducer\";\n\nconst rootReducer = combineReducers({\n  galleryReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\nexport default rootReducer;\n","import { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport { FETCH_GALLERIES_START } from \"./galleryActionTypes\";\nimport { fetchGalleriesSuccessAction } from \"./galleryActions\";\n\nconst fetchData = async () => {\n  try {\n    const response = await fetch(\n      \"https://my-json-server.typicode.com/patrykmysiorski/fake-api-react-gallery/gallery\"\n    );\n    return await response.json();\n  } catch (error) {\n    console.log(\"error \", error);\n  }\n};\n\nfunction* fetchGalleriesAsync() {\n  try {\n    const data = yield call(fetchData);\n    yield put(fetchGalleriesSuccessAction(data));\n  } catch (error) {\n    console.log(\"error in saga\", error);\n  }\n}\n\nfunction* fetchGalleriesStart() {\n  yield takeLatest(FETCH_GALLERIES_START, fetchGalleriesAsync);\n}\n\nexport function* gallerySaga() {\n  yield all([call(fetchGalleriesStart)]);\n}\n","import { all, call } from \"redux-saga/effects\";\nimport { gallerySaga } from \"./gallery/gallerySaga\";\n\nexport default function* rootSaga() {\n  yield all([call(gallerySaga)]);\n}\n","import { applyMiddleware, createStore } from \"redux\";\nimport rootReducer from \"./rootReducer\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootSaga from \"./rootSaga\";\nimport createSagaMiddleware from \"redux-saga\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport type AppDispatch = typeof store.dispatch;\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.scss\";\nimport App from \"./components/App/App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <BrowserRouter basename=\"/react-gallery\">\n        <App />\n      </BrowserRouter>\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}