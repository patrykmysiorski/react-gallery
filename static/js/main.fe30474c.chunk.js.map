{"version":3,"sources":["components/News/News.tsx","components/Gallery/Gallery.tsx","utils/stringUtils.ts","redux/gallery/galleryActionTypes.ts","redux/gallery/gallerySelectors.ts","components/GalleriesContainer/GalleriesContainer.tsx","redux/gallery/galleryActions.ts","components/About/About.tsx","redux/gallery/tag/tagActionTypes.ts","components/TagsContainer/Tag/Tag.tsx","redux/gallery/tag/tagActions.ts","components/TagsContainer/TagsContainer.tsx","components/GalleryPage/GalleryPage.tsx","constants/urls.ts","logo.svg","components/UserPanel/UserPanel.tsx","components/NavBar/NavBar.tsx","components/App/App.tsx","redux/gallery/galleryReducer.ts","redux/rootReducer.ts","redux/gallery/gallerySaga.ts","redux/rootSaga.ts","redux/store.ts","index.tsx"],"names":["News","Gallery","text","limit","id","title","date","description","coverUrl","backgroundColor","className","classnames","to","style","backgroundImage","process","length","substring","moment","format","FETCH_GALLERIES_START","FETCH_GALLERIES_SUCCESS","FETCH_GALLERY_START","FETCH_GALLERY_SUCCESS","UPDATE_GALLERY_START","galleryReducerSelector","state","galleryReducer","galleriesSelector","createSelector","galleries","currentGallerySelector","currentGallery","GalleriesContainer","dispatch","useDispatch","useEffect","type","useSelector","classNames","map","gallery","index","galleryId","dateCreated","About","ADD_TAG","DELETE_TAG","Tag","content","isEdited","toUpperCase","onClick","payload","TagsContainer","tags","updateGallery","useState","setIsEdited","tag","GalleryPage","useParams","fetchGalleryStartAction","photos","photoUrl","NEWS_URL","UserPanel","NavBar","userPanelHidden","setUserPanelHidden","src","logo","alt","height","App","exact","path","initialState","action","push","filter","rootReducer","combineReducers","fetchGalleriesStart","fetchGalleriesAsync","fetchGalleryStart","fetchGalleryAsync","updateGalleryStart","updateGalleryAsync","gallerySaga","takeLatest","axios","get","then","response","data","put","console","log","patch","all","call","rootSaga","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.fe30474c.chunk.js","sourcesContent":["import React from \"react\";\n\nconst News: React.FC = () => <h1>news</h1>;\n\nexport default News;\n","import React from \"react\";\nimport \"./Gallery.scss\";\nimport { Link } from \"react-router-dom\";\nimport moment from \"moment\";\nimport classnames from \"classnames\";\nimport { addDots } from \"../../utils/stringUtils\";\n\ninterface IProps {\n  id: string;\n  title: string;\n  date: Date;\n  description: string;\n  coverUrl: string;\n  backgroundColor: boolean;\n}\n\nconst Gallery: React.FC<IProps> = ({\n  id,\n  title,\n  date,\n  description,\n  coverUrl,\n  backgroundColor,\n}) => {\n  return (\n    <div\n      className={classnames(\n        \"gallery-box\",\n        `${backgroundColor && \"background-color\"}`\n      )}\n    >\n      <Link to={`/gallery/${id}`}>\n        <div\n          className=\"picture-box\"\n          style={{\n            backgroundImage: `url(${process.env.PUBLIC_URL + coverUrl})`,\n          }}\n        />\n        <div\n          className={classnames(\n            \"gallery-box__info\",\n            \"p-2\",\n            \"flex-col-container\",\n            \"flex-justify-end\"\n          )}\n        >\n          <h3 className={\"m-b-1\"}>{title}</h3>\n          <span>{addDots(description, 200)}</span>\n          <div className=\"date\">\n            <i>\n              <p>{moment(date).format(\"DD.MM.YYYY\")}</p>\n            </i>\n          </div>\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nexport default Gallery;\n","export const addDots = (text: string, limit: number): string => {\n  const dots = \"...\";\n  if (text.length > limit) {\n    return (text = `${text.substring(0, limit)}${dots}`);\n  }\n  return text;\n};\n","import IGallery from \"../../models/gallery\";\r\nimport { TagActionTypes } from \"./tag/tagActionTypes\";\r\n\r\nexport const FETCH_GALLERIES_START = \"FETCH_GALLERIES_START\";\r\nexport const FETCH_GALLERIES_SUCCESS = \"FETCH_GALLERIES_SUCCESS\";\r\nexport const FETCH_GALLERIES_FAILED = \"FETCH_GALLERIES_FAILED\";\r\n\r\nexport const FETCH_GALLERY_START = \"FETCH_GALLERY_START\";\r\nexport const FETCH_GALLERY_SUCCESS = \"FETCH_GALLERY_SUCCESS\";\r\nexport const FETCH_GALLERY_FAILED = \"FETCH_GALLERY_FAILED\";\r\n\r\nexport const UPDATE_GALLERY_START = \"UPDATE_GALLERY_START\";\r\nexport const UPDATE_GALLERY_SUCCESS = \"UPDATE_GALLERY_SUCCESS\";\r\nexport const UPDATE_GALLERY_FAILED = \"UPDATE_GALLERY_FAILED\";\r\n\r\ninterface FetchGalleriesStartAction {\r\n  type: typeof FETCH_GALLERIES_START;\r\n}\r\n\r\ninterface FetchGalleriesSuccessAction {\r\n  type: typeof FETCH_GALLERIES_SUCCESS;\r\n  payload: IGallery[];\r\n}\r\n\r\ninterface FetchGalleriesFailedAction {\r\n  type: typeof FETCH_GALLERIES_FAILED;\r\n}\r\n\r\nexport interface FetchGalleryStartAction {\r\n  type: typeof FETCH_GALLERY_START;\r\n  payload: string;\r\n}\r\n\r\ninterface FetchGallerySuccessAction {\r\n  type: typeof FETCH_GALLERY_SUCCESS;\r\n  payload: IGallery;\r\n}\r\n\r\ninterface FetchGalleryFailedAction {\r\n  type: typeof FETCH_GALLERY_FAILED;\r\n}\r\n\r\n// TODO types\r\n\r\nexport interface UpdateGalleryStartAction {\r\n  type: typeof UPDATE_GALLERY_START;\r\n  payload: any;\r\n}\r\n\r\ninterface UpdateGallerySuccessAction {\r\n  type: typeof UPDATE_GALLERY_SUCCESS;\r\n}\r\n\r\ninterface UpdateGalleryFailedAction {\r\n  type: typeof UPDATE_GALLERY_FAILED;\r\n}\r\n\r\nexport type GalleriesActionTypes =\r\n  | FetchGalleriesStartAction\r\n  | FetchGalleriesSuccessAction\r\n  | FetchGalleriesFailedAction\r\n  | FetchGalleryStartAction\r\n  | FetchGallerySuccessAction\r\n  | FetchGalleryFailedAction\r\n  | UpdateGalleryStartAction\r\n  | UpdateGallerySuccessAction\r\n  | UpdateGalleryFailedAction\r\n  | TagActionTypes;\r\n","import { createSelector } from \"reselect\";\nimport { RootState } from \"../rootReducer\";\n\nconst galleryReducerSelector = (state: RootState) => state.galleryReducer;\n\nexport const galleriesSelector = createSelector(\n  [galleryReducerSelector],\n  (galleryReducer) => galleryReducer.galleries\n);\n\nexport const gallerySelector = (id: string) =>\n  createSelector(galleriesSelector, (galleries) =>\n    galleries.find((gallery) => gallery.galleryId === id)\n  );\n\nexport const currentGallerySelector = createSelector(\n  [galleryReducerSelector],\n  (galleryReducer) => galleryReducer.currentGallery\n);\n","import React, { useEffect } from \"react\";\nimport Gallery from \"../Gallery/Gallery\";\nimport IGallery from \"../../models/gallery\";\nimport \"./GalleriesContainer.scss\";\nimport classNames from \"classnames\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchGalleriesStartAction } from \"../../redux/gallery/galleryActions\";\nimport { galleriesSelector } from \"../../redux/gallery/gallerySelectors\";\nimport { AppDispatch } from \"../../redux/store\";\n\nconst GalleriesContainer: React.FC = () => {\n  const dispatch: AppDispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchGalleriesStartAction());\n  }, [dispatch]);\n\n  const galleries: IGallery[] = useSelector(galleriesSelector);\n\n  return (\n    <div>\n      <h1 className={\"m-t-2\"}>My galleries</h1>\n      <div\n        className={classNames(\n          \"galleries-container\",\n          \"flex-row-container\",\n          \"flex-wrap\",\n          \"m-t-2\"\n        )}\n      >\n        {galleries &&\n          galleries.map((gallery: IGallery, index: number) => {\n            return (\n              <Gallery\n                key={gallery.galleryId}\n                id={gallery.galleryId}\n                title={gallery.title}\n                date={gallery.dateCreated}\n                description={gallery.description}\n                coverUrl={gallery.coverUrl}\n                backgroundColor={index % 2 === 0}\n              />\n            );\n          })}\n      </div>\n    </div>\n  );\n};\n\nexport default GalleriesContainer;\n","import {\n  FETCH_GALLERIES_FAILED,\n  FETCH_GALLERIES_START,\n  FETCH_GALLERIES_SUCCESS,\n  FETCH_GALLERY_FAILED,\n  FETCH_GALLERY_START,\n  FETCH_GALLERY_SUCCESS,\n  GalleriesActionTypes,\n  UPDATE_GALLERY_FAILED,\n  UPDATE_GALLERY_START,\n  UPDATE_GALLERY_SUCCESS,\n} from \"./galleryActionTypes\";\nimport IGallery from \"../../models/gallery\";\n\nexport const fetchGalleriesStartAction = (): GalleriesActionTypes => {\n  return { type: FETCH_GALLERIES_START };\n};\n\nexport const fetchGalleriesSuccessAction = (\n  payload: IGallery[]\n): GalleriesActionTypes => {\n  return {\n    type: FETCH_GALLERIES_SUCCESS,\n    payload,\n  };\n};\n\nexport const fetchGalleriesFailedAction = (): GalleriesActionTypes => {\n  return {\n    type: FETCH_GALLERIES_FAILED,\n  };\n};\n\nexport const fetchGalleryStartAction = (\n  galleryId: string\n): GalleriesActionTypes => {\n  return { type: FETCH_GALLERY_START, payload: galleryId };\n};\n\nexport const fetchGallerySuccessAction = (\n  payload: IGallery\n): GalleriesActionTypes => {\n  return {\n    type: FETCH_GALLERY_SUCCESS,\n    payload,\n  };\n};\n\nexport const fetchGalleryFailedAction = (): GalleriesActionTypes => {\n  return {\n    type: FETCH_GALLERY_FAILED,\n  };\n};\n\nexport const updateGalleryStartAction = (\n  payload: any\n): GalleriesActionTypes => {\n  return { type: UPDATE_GALLERY_START, payload };\n};\n\nexport const updateGallerySuccessAction = (): GalleriesActionTypes => {\n  return {\n    type: UPDATE_GALLERY_SUCCESS,\n  };\n};\n\nexport const updateGalleryFailedAction = (): GalleriesActionTypes => {\n  return {\n    type: UPDATE_GALLERY_FAILED,\n  };\n};\n","import React from \"react\";\nimport \"./About.scss\";\n\nconst About: React.FC = () => <div>about/contact</div>;\n\nexport default About;\n","export const ADD_TAG = \"ADD_TAG\";\nexport const DELETE_TAG = \"DELETE_TAG\";\n\ninterface AddTagAction {\n  type: typeof ADD_TAG;\n  payload: string;\n}\n\ninterface DeleteTagAction {\n  type: typeof DELETE_TAG;\n  payload: string;\n}\n\nexport type TagActionTypes = AddTagAction | DeleteTagAction;\n","import React from \"react\";\nimport \"./Tag.scss\";\nimport { AppDispatch } from \"../../../redux/store\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteTagAction } from \"../../../redux/gallery/tag/tagActions\";\n\ninterface IProps {\n  content: string;\n  isEdited: boolean;\n}\n\nconst Tag: React.FC<IProps> = ({ content, isEdited }) => {\n  const dispatch: AppDispatch = useDispatch();\n  return (\n    <div className={\"flex-row-container flex-align-items-center tag p-1 m-r-1\"}>\n      <span>{content.toUpperCase()}</span>\n      {isEdited && (\n        <span\n          className=\"material-icons md-20 pointer\"\n          onClick={() => dispatch(deleteTagAction(content))}\n        >\n          delete_forever\n        </span>\n      )}\n    </div>\n  );\n};\n\nexport default Tag;\n","import { ADD_TAG, DELETE_TAG, TagActionTypes } from \"./tagActionTypes\";\n\nexport const addTagAction = (tag: string): TagActionTypes => {\n  return { type: ADD_TAG, payload: tag };\n};\n\nexport const deleteTagAction = (tag: string): TagActionTypes => {\n  return { type: DELETE_TAG, payload: tag };\n};\n","import React, { useState } from \"react\";\nimport Tag from \"./Tag/Tag\";\nimport \"./TagsContainer.scss\";\n\ninterface IProps {\n  tags?: string[];\n  updateGallery: Function;\n}\n\nconst TagsContainer: React.FC<IProps> = ({ tags, updateGallery }) => {\n  const [isEdited, setIsEdited] = useState(false);\n  const handleClick = () => {\n    if (isEdited) {\n      updateGallery();\n    }\n  };\n\n  return (\n    <div className={\"tags-container flex-row-container m-t-2 m-b-1 flex-wrap\"}>\n      {tags &&\n        tags.map((tag: string, index) => (\n          <Tag content={tag} key={index} isEdited={isEdited} />\n        ))}\n      <button\n        className={\"button button-edit\"}\n        onClick={() => {\n          setIsEdited(!isEdited);\n          handleClick();\n        }}\n      >\n        <div className=\"flex-row-container flex-align-items-center\">\n          <i className=\"material-icons md-20\">{isEdited ? \"done\" : \"create\"}</i>\n        </div>\n      </button>\n    </div>\n  );\n};\n\nexport default TagsContainer;\n","import React, { useEffect } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport moment from \"moment\";\nimport TagsContainer from \"../TagsContainer/TagsContainer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { currentGallerySelector } from \"../../redux/gallery/gallerySelectors\";\nimport { AppDispatch } from \"../../redux/store\";\nimport {\n  fetchGalleryStartAction,\n  updateGalleryStartAction,\n} from \"../../redux/gallery/galleryActions\";\nimport { RootState } from \"../../redux/rootReducer\";\nimport IGallery from \"../../models/gallery\";\nimport \"./GalleryPage.scss\";\nimport classNames from \"classnames\";\n\ninterface IParams {\n  galleryId: string;\n}\n\nconst GalleryPage: React.FC = () => {\n  const { galleryId }: IParams = useParams();\n  const dispatch: AppDispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchGalleryStartAction(galleryId));\n  }, [dispatch, galleryId]);\n  const gallery: IGallery = useSelector<RootState, IGallery>((state) =>\n    currentGallerySelector(state)\n  );\n  const updateGallery = (): void => {\n    dispatch(\n      updateGalleryStartAction({\n        galleryId: gallery.galleryId,\n        tags: gallery.tags,\n      })\n    );\n  };\n  return (\n    <>\n      {gallery && (\n        <>\n          <div\n            className={\"flex-row-container flex-align-items-center m-t-2 m-b-1\"}\n          >\n            <Link to={\"/\"}>\n              <button className={\"button button-primary\"}>\n                <div className=\"flex-row-container flex-align-items-center\">\n                  <i className=\"material-icons md-16\">arrow_back_ios</i>back to\n                  galleries\n                </div>\n              </button>\n            </Link>\n            <h2 className={\"m-l-3\"}>{`${gallery.title}, ${moment(\n              gallery.dateCreated\n            ).format(\"DD MMMM YYYY\")}`}</h2>\n          </div>\n          <hr />\n          <TagsContainer tags={gallery.tags} updateGallery={updateGallery} />\n          <div className=\"flex-col-container\">\n            <div className=\"photos-container flex-row-container flex-justify-space-between\">\n              <div\n                className=\"main-photo\"\n                style={{\n                  backgroundImage: `url(${\n                    process.env.PUBLIC_URL + gallery.coverUrl\n                  })`,\n                }}\n              />\n              <div className=\"vertical-line\" />\n              <div className=\"other-images-wrapper flex-row-container flex-align-items-center\">\n                <span className=\"material-icons md-32 m-l-1\">\n                  arrow_back_ios\n                </span>\n                <div className=\"others-images\">\n                  <div className=\"flex-row-container margin-bottom-10\">\n                    {gallery.photos?.map((photoUrl: string, index: number) => {\n                      if (index === 0 || index === 1) {\n                        return (\n                          <div\n                            className={classNames(\n                              \"small-image\",\n                              !index && \"m-r-1\"\n                            )}\n                            style={{\n                              backgroundImage: `url(${\n                                process.env.PUBLIC_URL + photoUrl\n                              })`,\n                            }}\n                          />\n                        );\n                      }\n                      return null;\n                    })}\n                  </div>\n                  <div className=\"flex-row-container margin-top-10\">\n                    {gallery.photos?.map((photoUrl: string, index: number) => {\n                      if (index === 2 || index === 3) {\n                        return (\n                          <div\n                            className={classNames(\n                              \"small-image\",\n                              index === 2 ? \"m-r-1\" : \"\"\n                            )}\n                            style={{\n                              backgroundImage: `url(${\n                                process.env.PUBLIC_URL + photoUrl\n                              })`,\n                            }}\n                          />\n                        );\n                      }\n                      return null;\n                    })}\n                  </div>\n                </div>\n                <span className=\"material-icons md-32\">arrow_forward_ios</span>\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default GalleryPage;\n","export const HOME_URL = \"/react-gallery\";\nexport const GALLERY_URL = \"/gallery/:galleryId\";\nexport const CONTACT_URL = \"/contact\";\nexport const NEWS_URL = \"/news\";\n","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from \"react\";\r\nimport \"./UserPanel.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst UserPanel = () => (\r\n  <div className=\"user-panel p-1 flex-col-container\">\r\n    <p className={\"m-b-1\"}>Signed in as</p>\r\n    <p className={\"username m-b-1\"}>yourUsername</p>\r\n    <hr />\r\n    <Link to={\"profile\"}>Your profile</Link>\r\n    <hr />\r\n    <Link to={\"settings\"}>Settings</Link>\r\n    <Link to={\"/\"}>Sign out</Link>\r\n  </div>\r\n);\r\n\r\nexport default UserPanel;\r\n","import React, { useState } from \"react\";\nimport classNames from \"classnames\";\nimport logo from \"../../logo.svg\";\nimport { Link } from \"react-router-dom\";\nimport { NEWS_URL } from \"../../constants/urls\";\nimport \"./NavBar.scss\";\nimport UserPanel from \"../UserPanel/UserPanel\";\n\nconst NavBar = () => {\n  const avatarUrl = \"/img/user/user.jpeg\";\n  const [userPanelHidden, setUserPanelHidden] = useState(true);\n  return (\n    <header>\n      <div className={\"header p-l-6 p-r-6\"}>\n        <Link to={\"/\"}>\n          <div\n            className={classNames(\n              \"logo-part\",\n              \"flex-row-container\",\n              \"flex-align-items-center\"\n            )}\n          >\n            <img className={\"logo\"} src={logo} alt=\"app logo\" height={70} />\n            <h2>React Gallery</h2>\n          </div>\n        </Link>\n        <div className=\"links-part flex-row-container\">\n          <div className=\"buttons flex-row-container flex-justify-end\">\n            <Link to={\"/\"}>Galleries</Link>\n            <Link to={`${NEWS_URL}`}>News</Link>\n          </div>\n          <div\n            className=\"user-panel-header m-r-1 m-l-1\"\n            onClick={() => setUserPanelHidden(!userPanelHidden)}\n            style={{\n              backgroundImage: `url(${process.env.PUBLIC_URL + avatarUrl})`,\n            }}\n          />\n        </div>\n      </div>\n      {!userPanelHidden && <UserPanel />}\n    </header>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\r\nimport \"./App.scss\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport News from \"../News/News\";\r\nimport GalleriesContainer from \"../GalleriesContainer/GalleriesContainer\";\r\nimport About from \"../About/About\";\r\nimport GalleryPage from \"../GalleryPage/GalleryPage\";\r\nimport { CONTACT_URL, GALLERY_URL, NEWS_URL } from \"../../constants/urls\";\r\nimport NavBar from \"../NavBar/NavBar\";\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <>\r\n      <NavBar />\r\n      <div className={\"app-container\"}>\r\n        <div className=\"app-content\">\r\n          <Switch>\r\n            <Route exact path={\"/\"}>\r\n              <GalleriesContainer />\r\n            </Route>\r\n            <Route path={`${NEWS_URL}`}>\r\n              <News />\r\n            </Route>\r\n            <Route path={`${CONTACT_URL}`}>\r\n              <About />\r\n            </Route>\r\n            <Route path={`${GALLERY_URL}`}>\r\n              <GalleryPage />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { GalleryState } from \"./galleryTypes\";\nimport {\n  FETCH_GALLERIES_SUCCESS,\n  FETCH_GALLERY_SUCCESS,\n  GalleriesActionTypes,\n} from \"./galleryActionTypes\";\nimport { ADD_TAG, DELETE_TAG } from \"./tag/tagActionTypes\";\n\nconst initialState: GalleryState = {\n  galleries: [],\n  currentGallery: {},\n};\n\nconst galleryReducer = (\n  state = initialState,\n  action: GalleriesActionTypes\n): GalleryState => {\n  switch (action.type) {\n    case FETCH_GALLERIES_SUCCESS:\n      return {\n        ...state,\n        galleries: action.payload,\n      };\n    case FETCH_GALLERY_SUCCESS:\n      return {\n        ...state,\n        currentGallery: action.payload,\n      };\n    case ADD_TAG:\n      return {\n        ...state,\n        currentGallery: {\n          ...state.currentGallery,\n          tags: state.currentGallery.tags.push(action.payload),\n        },\n      };\n    case DELETE_TAG:\n      return {\n        ...state,\n        currentGallery: {\n          ...state.currentGallery,\n          tags: state.currentGallery.tags.filter(\n            (tag: string) => tag !== action.payload\n          ),\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport default galleryReducer;\n","import { combineReducers } from \"redux\";\nimport galleryReducer from \"./gallery/galleryReducer\";\n\nconst rootReducer = combineReducers({\n  galleryReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\nexport default rootReducer;\n","import { all, call, put, takeLatest } from \"redux-saga/effects\";\nimport {\n  FETCH_GALLERIES_START,\n  FETCH_GALLERY_START,\n  FetchGalleryStartAction,\n  UPDATE_GALLERY_START,\n  UpdateGalleryStartAction,\n} from \"./galleryActionTypes\";\nimport {\n  fetchGalleriesFailedAction,\n  fetchGalleriesSuccessAction,\n  fetchGalleryFailedAction,\n  fetchGallerySuccessAction,\n  updateGalleryFailedAction,\n  updateGallerySuccessAction,\n} from \"./galleryActions\";\nimport axios from \"axios\";\n\nfunction* fetchGalleriesStart() {\n  yield takeLatest(FETCH_GALLERIES_START, fetchGalleriesAsync);\n}\n\nfunction* fetchGalleriesAsync() {\n  try {\n    const data = yield axios.get(\"/gallery\").then((response) => response.data);\n    yield put(fetchGalleriesSuccessAction(data));\n  } catch (error) {\n    yield console.log(\"error when fetching galleries\", error);\n    yield put(fetchGalleriesFailedAction());\n  }\n}\n\nfunction* fetchGalleryStart() {\n  yield takeLatest(FETCH_GALLERY_START, fetchGalleryAsync);\n}\n\nfunction* fetchGalleryAsync(action: FetchGalleryStartAction) {\n  try {\n    const response = yield axios\n      .get(`/gallery/${action.payload}`)\n      .then((response) => response.data);\n    yield put(fetchGallerySuccessAction(response));\n  } catch (error) {\n    console.log(`error when fetching gallery with id ${action.payload}`, error);\n    yield put(fetchGalleryFailedAction());\n  }\n}\n\nfunction* updateGalleryStart() {\n  yield takeLatest(UPDATE_GALLERY_START, updateGalleryAsync);\n}\n\nfunction* updateGalleryAsync(action: UpdateGalleryStartAction) {\n  try {\n    yield axios\n      .patch(\"/gallery\", {\n        galleryId: action.payload.galleryId,\n        tags: action.payload.tags,\n      })\n      .then((response) => console.log(\"Returned data: \", response));\n    yield put(updateGallerySuccessAction());\n  } catch (error) {\n    yield console.log(\"error in saga\", error);\n    yield put(updateGalleryFailedAction());\n  }\n}\n\nexport function* gallerySaga() {\n  yield all([\n    call(fetchGalleriesStart),\n    call(fetchGalleryStart),\n    call(updateGalleryStart),\n  ]);\n}\n","import { all, call } from \"redux-saga/effects\";\nimport { gallerySaga } from \"./gallery/gallerySaga\";\n\nexport default function* rootSaga() {\n  yield all([call(gallerySaga)]);\n}\n","import { applyMiddleware, createStore } from \"redux\";\nimport rootReducer from \"./rootReducer\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootSaga from \"./rootSaga\";\nimport createSagaMiddleware from \"redux-saga\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\n);\n\nsagaMiddleware.run(rootSaga);\n\nexport type AppDispatch = typeof store.dispatch;\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.scss\";\nimport App from \"./components/App/App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <BrowserRouter basename=\"/react-gallery\">\n        <App />\n      </BrowserRouter>\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}